{
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
  // Placeholders with the same ids are connected.
  // Example:
  "Initialized Component": {
    "scope": "typescript, typescriptreact",
    "prefix": "initc",
    "body": [
      "import React, { ReactElement } from 'react'",
      "interface $2 {",
      "\t$3",
      "}",
      "",
      "const $1 = ({navigation, ...props }: $2): ReactElement => {",
      "\treturn (",
      "\t\t<Box flex={1} backgroundColor='primary'>",
      "\t\t\t<Header",
      "\t\t\t\ttitle='$4'",
      "\t\t\t\tleft={{",
      "\t\t\t\t\ticon: 'menu',",
      "\t\t\t\t\tonPress: ()=> navigation.openDrawer(),",
      "\t\t\t\t}}",
      "\t\t\t\t${6:dark}",
      "\t\t\t/>",
      "\t\t\t<Box flex={1} backgroundColor='background' padding='m'>",
      "\t\t\t\t$7",
      "\t\t\t</Box>",
      "\t\t</Box>",
      "\t)",
      "}",
      "",
      "export default $1"
    ],
    "description": "Initialized new component"
  },
  "importComponent": {
    "scope": "typescript, typescriptreact",
    "prefix": "im",
    "body": "import {$2} from '$1';"
  },
  "createAsyncThunk": {
    "scope": "typescript, typescriptreact",
    "prefix": "cAT",
    "body": [
      "export const $1: AsyncThunk<${2:any}, ${3:any}, ThunkAPI> = createAsyncThunk(`\\${SLICE_NAME}/${4:action}`, async (params, thunkAPI)=> {",
      "\t$5",
      "})"
    ],
    "description": "create Async Thunk for redux-toolkit slice"
  }
}